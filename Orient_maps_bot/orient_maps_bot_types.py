import telebot
from telebot import types
import orient_maps_bot_postgre as omb_postgre


with open('Orient_maps_bot/telebot_token.txt') as f:
    bot_token = f.read().strip()
global bot
bot = telebot.TeleBot(bot_token)


class Omap:
    def __init__(self, name):
        self.name = name
        self.telegram_file_type = None
        self.location = None
        self.event_date = None
        self.tags = None
        self.owner = None
        self.index = None
        self.telegram_file_id = None
        self.id = None


omap_dict = {}    # —Ç–µ–∫—É—â–∞—è –∫–∞—Ä—Ç–∞ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è (—ç–∫–∑–µ–º–ø–ª—è—Ä –∫–ª–∞—Å—Å–∞ Omap)
map_pointer = {}  # –∫–æ–ª-–≤–æ –∫–∞—Ä—Ç –≤ –≤—ã–±–æ—Ä–∫–µ –∏ –ø–æ—Ä—è–¥–∫–æ–≤—ã–π –Ω–æ–º–µ—Ä –∫–∞—Ä—Ç—ã, –≤—ã–±—Ä–∞–Ω–Ω–æ–π –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª–µ–º –≤ –¥–∞–Ω–Ω—ã–π –º–æ–º–µ–Ω—Ç
user_maps = {}    # –≤—Å—è –≤—ã–±–æ—Ä–∫–∞ –∫–∞—Ä—Ç –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è


class Addfile:
    def __init__(self, omap_id, file_type):
        self.omap_id = omap_id
        self.file_type = file_type
        self.telegram_file_id = None
        self.file_id = None
        self.telegram_file_type = None


map_addfiles = {}  # –≤—Å–µ –¥–æ–ø–æ–ª–Ω–∏—Ç–µ–ª—å–Ω—ã–µ —Ñ–∞–π–ª—ã –¥–ª—è –≤—ã–±—Ä–∞–Ω–Ω–æ–π –∫–∞—Ä—Ç—ã


errors = {"omb-001": "–ß—Ç–æ-—Ç–æ –ø–æ—à–ª–æ –Ω–µ —Ç–∞–∫. –ü—Ä–∏–¥—ë—Ç—Å—è –Ω–∞—á–∏–Ω–∞—Ç—å —Å–Ω–∞—á–∞–ª–∞.",
          "omb-002": "–ù–µ –ø–æ—Ö–æ–∂–µ –Ω–∞ –∫–∞—Ä—Ç—É. –î–∞–≤–∞–π –ø–æ –Ω–æ–≤–æ–π.",
          "omb-003": "–ù–µ –ø–æ—Ö–æ–∂–µ –Ω–∞ –≥–µ–æ–ª–æ–∫–∞—Ü–∏—é. –î–∞–≤–∞–π –ø–æ –Ω–æ–≤–æ–π.",
          "omb-004": "–ù–µ–ø—Ä–∞–≤–∏–ª—å–Ω—ã–π —Ñ–æ—Ä–º–∞—Ç –¥–∞—Ç—ã. –î–∞–≤–∞–π –ø–æ –Ω–æ–≤–æ–π."
          }


def welcome_keyboard(user_id):  # –∫–ª–∞–≤–∏–∞—Ç—É—Ä–∞ –≥–ª–∞–≤–Ω–æ–≥–æ –º–µ–Ω—é
    keyboard = types.InlineKeyboardMarkup()
    keyboard.add(types.InlineKeyboardButton(text='–ó–∞–≥—Ä—É–∑–∏—Ç—å –∫–∞—Ä—Ç—ÉüóÑ', callback_data='upload_map'))
    if omb_postgre.check_maps_exist(user_id):
        keyboard.add(types.InlineKeyboardButton(text='–ù–∞–π—Ç–∏ –∫–∞—Ä—Ç—Éüîé', callback_data='find_map'))
    if user_id == 366436625:
        keyboard.add(types.InlineKeyboardButton(text='üï∂–ê–¥–º–∏–Ω–∫–∞üï∂', callback_data='admin_info'))
    return keyboard


def find_map_keyboard():  # –∫–ª–∞–≤–∏–∞—Ç—É—Ä–∞ –ø–æ–∏—Å–∫–∞ –∫–∞—Ä—Ç
    keyboard = types.InlineKeyboardMarkup()
    keyboard.add(types.InlineKeyboardButton(text='–ü–æ–∫–∞–∑–∞—Ç—å –≤—Å–µüåç', callback_data='show_all'))
    keyboard.add(types.InlineKeyboardButton(text='–ü–æ–∏—Å–∫ –ø–æ –∏–Ω–¥–µ–∫—Å—Éüè∑', callback_data='find_by_first_letter'))
    keyboard.add(types.InlineKeyboardButton(text='–ü–æ–∏—Å–∫ –ø–æ —Ö—ç—à—Ç—ç–≥–∞–º#Ô∏è‚É£', callback_data='find_by_tags'))
    keyboard.add(types.InlineKeyboardButton(text='–ü–æ–∏—Å–∫ –ø–æ –≥–µ–æ–ª–æ–∫–∞—Ü–∏–∏üìå', callback_data='find_by_geoloc'))
    keyboard.add(types.InlineKeyboardButton(text='–ü–æ–∏—Å–∫ –ø–æ –¥–∞—Ç–µüìÖ', callback_data='find_by_date'))
    keyboard.add(types.InlineKeyboardButton(text='‚Ü©Ô∏è–ù–∞–∑–∞–¥ –≤ –≥–ª–∞–≤–Ω–æ–µ –º–µ–Ω—é', callback_data='main_menu'))
    return keyboard


def map_switch_keyboard(keyboard_spec, addfile_cnt=0, show_addfiles=False, omap_id=0):  # –∫–ª–∞–≤–∏–∞—Ç—É—Ä–∞ –ø—Ä–∏ –≤—ã–±–æ—Ä–µ –∫–∞—Ä—Ç
    keyboard = types.InlineKeyboardMarkup()
    keyboard.row_width = 5
    inline_buttons = []
    if keyboard_spec[0] > 1:
        k_button = types.InlineKeyboardButton(text='‚èÆ 1', callback_data='first_map')
        inline_buttons.append(k_button)
    if keyboard_spec[0] > 2:
        k_button = types.InlineKeyboardButton(text='‚óÄ '+str(keyboard_spec[0]-1), callback_data='prev_map')
        inline_buttons.append(k_button)
    inline_buttons.append(types.InlineKeyboardButton(text='‚Ä¢ '+str(keyboard_spec[0])+' ‚Ä¢', callback_data='curr_map'))
    if keyboard_spec[1]-keyboard_spec[0] >= 2:
        k_button = types.InlineKeyboardButton(text=str(keyboard_spec[0]+1)+' ‚ñ∂', callback_data='next_map')
        inline_buttons.append(k_button)
    if keyboard_spec[1]-keyboard_spec[0] >= 1:
        k_button = types.InlineKeyboardButton(text=str(keyboard_spec[1])+' ‚è≠', callback_data='last_map')
        inline_buttons.append(k_button)
    keyboard.add(*inline_buttons)  # –¥–æ–±–∞–≤–ª—è–µ–º –∫–Ω–æ–ø–∫–∏ –≤ –∫–ª–∞–≤–∏–∞—Ç—É—Ä—É
    keyboard.add(types.InlineKeyboardButton(text='–ì–µ–æ–ª–æ–∫–∞—Ü–∏—èüìå', callback_data='show_geoloc'),
                 types.InlineKeyboardButton(text='–î–æ–±–∞–≤–∏—Ç—å —Ñ–∞–π–ªüìé', callback_data='add_file'))
    keyboard.add(types.InlineKeyboardButton(text='–†–µ–¥–∞–∫—Ç–∏—Ä–æ–≤–∞—Ç—å‚úèÔ∏è', callback_data='edit_map'),
                 types.InlineKeyboardButton(text='–£–¥–∞–ª–∏—Ç—å‚ùå', callback_data='delete_map'))
    if addfile_cnt > 0:
        if not show_addfiles:
            keyboard.add(types.InlineKeyboardButton(text='‚¨áÔ∏è–ü–æ–∫–∞–∑–∞—Ç—å –¥–æ–ø–æ–ª–Ω–∏—Ç–µ–ª—å–Ω—ã–µ —Ñ–∞–π–ª—ã‚¨áÔ∏è',
                                                    callback_data='show_addfiles'))
        else:
            keyboard.add(types.InlineKeyboardButton(text='‚¨áÔ∏è–î–æ–ø–æ–ª–Ω–∏—Ç–µ–ª—å–Ω—ã–µ —Ñ–∞–π–ª—ã‚¨áÔ∏è',
                                                    callback_data='hide_addfiles'))
            for file in map_addfiles[omap_id]:
                keyboard.add(types.InlineKeyboardButton(text=file[2], callback_data='show_addfile_'+str(file[0])))
            keyboard.add(types.InlineKeyboardButton(text='‚¨ÜÔ∏è–°–∫—Ä—ã—Ç—å –¥–æ–ø–æ–ª–Ω–∏—Ç–µ–ª—å–Ω—ã–µ —Ñ–∞–π–ª—ã‚¨ÜÔ∏è',
                                                    callback_data='hide_addfiles'))
    keyboard.add(types.InlineKeyboardButton(text='‚Ü©Ô∏è–ù–∞–∑–∞–¥ –≤ –≥–ª–∞–≤–Ω–æ–µ –º–µ–Ω—é', callback_data='main_menu_from_maps'))
    return keyboard


def map_edit_keyboard():
    keyboard = types.InlineKeyboardMarkup()
    keyboard.add(types.InlineKeyboardButton(text='–ó–∞–º–µ–Ω–∏—Ç—å –∫–∞—Ä—Ç—Éüó∫', callback_data='edit_map_file'),
                 types.InlineKeyboardButton(text='–ò–∑–º–µ–Ω–∏—Ç—å –¥–∞—Ç—ÉüìÖ', callback_data='edit_event_date'))
    keyboard.add(types.InlineKeyboardButton(text='–ò–∑–º–µ–Ω–∏—Ç—å —Ö—ç—à—Ç—ç–≥–∏#Ô∏è‚É£', callback_data='edit_tags'),
                 types.InlineKeyboardButton(text='–ò–∑–º–µ–Ω–∏—Ç—å –∏–Ω–¥–µ–∫—Åüè∑', callback_data='edit_first_letter'))
    keyboard.add(types.InlineKeyboardButton(text='–ò–∑–º–µ–Ω–∏—Ç—å –≥–µ–æ–ª–æ–∫–∞—Ü–∏—éüìå', callback_data='edit_geoloc'))
    keyboard.add(types.InlineKeyboardButton(text='‚Ü©Ô∏è–ù–∞–∑–∞–¥ –∫ –≤—ã–±–æ—Ä—É –∫–∞—Ä—Ç', callback_data='map_switch_from_edit'))
    return keyboard


def return_to_map_switch():
    keyboard = types.InlineKeyboardMarkup()
    keyboard.add(types.InlineKeyboardButton(text='‚Ü©Ô∏è–ù–∞–∑–∞–¥ –∫ –≤—ã–±–æ—Ä—É –∫–∞—Ä—Ç', callback_data='map_switch_from_addfile'))
    return keyboard


def return_to_map_switch_from_geoloc():
    keyboard = types.InlineKeyboardMarkup()
    keyboard.add(types.InlineKeyboardButton(text='‚Ü©Ô∏è–ù–∞–∑–∞–¥ –∫ –≤—ã–±–æ—Ä—É –∫–∞—Ä—Ç', callback_data='map_switch_from_geoloc'))
    return keyboard


def show_stat_first_letter():
    keyboard = types.InlineKeyboardMarkup()
    keyboard.add(types.InlineKeyboardButton(text='–ü–æ—Å–º–æ—Ç—Ä–µ—Ç—å —Å—Ç–∞—Ç–∏—Å—Ç–∏–∫—É', callback_data='show_stat_first_letter'))
    return keyboard


def show_stat_tags():
    keyboard = types.InlineKeyboardMarkup()
    keyboard.add(types.InlineKeyboardButton(text='–ü–æ—Å–º–æ—Ç—Ä–µ—Ç—å —Å—Ç–∞—Ç–∏—Å—Ç–∏–∫—É', callback_data='show_stat_tags'))
    return keyboard


def map_delete_mode():
    keyboard = types.InlineKeyboardMarkup()
    keyboard.add(types.InlineKeyboardButton(text='–í—ã–∫–∏–Ω—É—Ç—å –±—É–º–∞–∂–Ω—É—é –∫–∞—Ä—Ç—Éüóë', callback_data='delete_paper_map'))
    keyboard.add(types.InlineKeyboardButton(text='–£–¥–∞–ª–∏—Ç—å –ø–æ–ª–Ω–æ—Å—Ç—å—é‚ùå', callback_data='delete_completely'))
    keyboard.add(types.InlineKeyboardButton(text='‚Ü©Ô∏è–ù–∞–∑–∞–¥ –∫ –≤—ã–±–æ—Ä—É –∫–∞—Ä—Ç', callback_data='map_switch_from_edit'))
    return keyboard


def map_delete_paper_confirm():
    keyboard = types.InlineKeyboardMarkup()
    keyboard.add(types.InlineKeyboardButton(text='–î–∞', callback_data='delete_paper_map_yes'))
    keyboard.add(types.InlineKeyboardButton(text='–ù–µ—Ç', callback_data='delete_paper_map_no'))
    return keyboard


def map_delete_completely_confirm():
    keyboard = types.InlineKeyboardMarkup()
    keyboard.add(types.InlineKeyboardButton(text='–î–∞', callback_data='delete_completely_yes'))
    keyboard.add(types.InlineKeyboardButton(text='–ù–µ—Ç', callback_data='delete_completely_no'))
    return keyboard
